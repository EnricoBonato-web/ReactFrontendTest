{"version":3,"sources":["components/Layout/SubmitButton.module.css","components/UI/Notification.module.css","components/Questions/QuestionItem/QuestionItem.module.css","components/UI/Card.module.css","components/Questions/AvailableQuestions.module.css","components/Questions/QuestionItem/QuestionItemForm.module.css","components/Submit/Submit.module.css","components/Submit/AnswerItem.module.css","store/answers-slice.js","store/ui-slice.js","store/index.js","components/Questions/QuestionItem/QuestionItemForm.tsx","components/Questions/QuestionItem/QuestionItem.tsx","components/UI/Card.tsx","components/Layout/SubmitButton.tsx","components/Questions/AvailableQuestions.tsx","components/UI/Notification.js","components/Layout/Header.tsx","components/Submit/AnswerItem.js","components/Submit/Submit.js","App.js","index.js"],"names":["module","exports","answersSlice","createSlice","name","initialState","answers","numberOfQuestions","reducers","addEmptyAnswer","state","action","push","questionId","payload","value","addAnswer","questionNumber","actions","uiSlice","answersIsVisible","notification","show","title","message","toggle","showNotification","uiActions","store","configureStore","reducer","ui","QuestionItemForm","props","dispatch","useDispatch","className","classes","answer","onChange","event","id","charAt","length","target","type","QuestionItems","answered","useSelector","style","submitted","error","question","text","Card","card","class","toString","children","SubmitButton","numberOfAnswer","count","forEach","button","bump","onClick","badge","AvailableQuestions","useState","questions","setQuestions","isLoading","setIsLoading","httpError","setHttpError","setsubmitted","answersSelector","useEffect","fetchedQuestions","fetch","process","response","ok","Error","json","key","responseData","loadedQuestions","loadedAnswers","catch","QuestionsError","QuestionsLoading","allChecked","reduce","partialSum","a","questionList","map","QuestionItem","Notification","cssClasses","closeModal","modal","close","Header","header","AnswerItem","Submit","App","submit","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.501cca9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SubmitButton_button__3fSV5\",\"icon\":\"SubmitButton_icon__3eIGK\",\"badge\":\"SubmitButton_badge__24xlR\",\"bump\":\"SubmitButton_bump__yLLQr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Notification_modal__1I6TU\",\"modal-content\":\"Notification_modal-content__2a_Pe\",\"close\":\"Notification_close__39hvN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"QuestionItem_error__3bulw\",\"question\":\"QuestionItem_question__38NQz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\",\"survey\":\"Card_survey__3zBFw\",\"modal-content\":\"Card_modal-content__3XEku\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"survey\":\"AvailableQuestions_survey__VIXK6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answer\":\"QuestionItemForm_answer__2wIw4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Submit_modal__UWq3o\",\"close\":\"Submit_close__1HIv7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answer\":\"AnswerItem_answer__2KqwP\"};","import { createSlice } from \"@reduxjs/toolkit\";\nconst answersSlice = createSlice({\n  name: \"answers\",\n  initialState: {\n    answers: [],\n    numberOfQuestions: 0,\n  },\n  reducers: {\n    addEmptyAnswer(state, action) {\n      state.answers.push({\n        questionId: action.payload.questionId,\n        value: action.payload.value,\n      });\n      state.numberOfQuestions++;\n    },\n    addAnswer(state, action) {\n      state.answers[action.payload.questionNumber-1].value = action.payload.value;\n    },\n  },\n});\n\nexport const cartActions = answersSlice.actions;\n\nexport default answersSlice;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst uiSlice = createSlice({\n  name: \"ui\",\n  initialState: {\n    answersIsVisible: false,\n    notification: { show: false, title: \"\", message: \"\" },\n  },\n  reducers: {\n    toggle(state) {\n      state.answersIsVisible = !state.answersIsVisible;\n    },\n    showNotification(state, action) {\n      state.notification = {\n        title: action.payload.title,\n        message: action.payload.message,\n        show: action.payload.show,\n      };\n    },\n  },\n});\n\nexport const uiActions = uiSlice.actions;\n\nexport default uiSlice;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport answersSlice from \"./answers-slice\";\nimport uiSlice from \"./ui-slice\";\n\nconst store = configureStore({\n  reducer: { ui: uiSlice.reducer, answers: answersSlice.reducer },\n});\n\nexport default store;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport store from \"../../../store\";\nimport answersSlice from \"../../../store/answers-slice\";\nimport classes from \"./QuestionItemForm.module.css\";\nconst QuestionItemForm = (props: any) => {\n  const dispatch = useDispatch();\n\n  const onChange = (event: any) => {\n    dispatch(\n      answersSlice.actions.addAnswer({\n        questionNumber: +props.id.charAt(props.id.length - 1),\n        value: +event.target.value,\n      })\n    );\n  };\n  return (\n    <ul className={classes.answer} onChange={onChange}>\n      <li>\n        <input type=\"radio\" name={props.id} value=\"1\" />\n        <label>completely untrue </label>\n      </li>\n      <li>\n        <input type=\"radio\" name={props.id} value=\"2\" />\n      </li>\n      <li>\n        <input type=\"radio\" name={props.id} value=\"3\" />\n      </li>\n      <li>\n        <input type=\"radio\" name={props.id} value=\"4\" />\n      </li>\n      <li>\n        <input type=\"radio\" name={props.id} value=\"5\" />\n      </li>\n      <li>\n        <input type=\"radio\" name={props.id} value=\"6\" />\n        <label>completely true</label>\n      </li>\n    </ul>\n  );\n};\nexport default QuestionItemForm;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport classes from \"./QuestionItem.module.css\";\nimport QuestionItemForm from \"./QuestionItemForm\";\n\nconst QuestionItems = (props: {\n  id: string;\n  text: string;\n  submitted: boolean;\n}) => {\n  const answered = useSelector((state: any) => state.answers.answers);\n  const style = `${\n    answered[+props.id.charAt(props.id.length - 1) - 1].value === 0 &&\n    props.submitted &&\n    classes.error\n  } ${props.id}`;\n  return (\n    <div className={style}>\n      <p className={classes.question}>{props.text}</p>\n      <QuestionItemForm id={props.id} />\n    </div>\n  );\n};\nexport default QuestionItems;\n","import React from \"react\";\nimport classes from \"./Card.module.css\";\n\nconst Card = (props: { children: React.ReactNode; class?: string }) => {\n  const style = `${classes.card} ${\n    props.class ? classes[props.class!.toString()] : \"\"\n  }`;\n  return <div className={style}>{props.children}</div>;\n};\nexport default Card;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport classes from \"./SubmitButton.module.css\";\nconst SubmitButton = (props: any) => {\n  const spanRef = React.createRef();\n  const numberOfQuestions = useSelector(\n    (state: any) => state.answers.numberOfQuestions\n  );\n  const numberOfAnswer = useSelector((state: any) => state.answers.answers);\n  let count = 0;\n  numberOfAnswer.forEach((answer: { questionId: string; value: number }) => {\n    if (answer.value !== 0) count++;\n  });\n  const style = `${classes.button} ${classes.bump}`;\n  return (\n    <button className={style} onClick={props.onClick}>\n      <span>Submit</span>\n      <span className={classes.badge}>\n        {count + \"/\" + numberOfQuestions}\n      </span>\n    </button>\n  );\n};\n\nexport default SubmitButton;\n","import React, { useEffect, useState } from \"react\";\nimport QuestionItems from \"./QuestionItem/QuestionItem\";\nimport Card from \"../UI/Card\";\nimport QuestionItem from \"../../types/QuestionItem\";\nimport classes from \"./AvailableQuestions.module.css\";\nimport SubmitButton from \"../Layout/SubmitButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\nimport answersSlice from \"../../store/answers-slice\";\nconst AvailableQuestions = () => {\n  const dispatch = useDispatch();\n  const [questions, setQuestions] = useState<QuestionItem[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [httpError, setHttpError] = useState();\n  const [submitted, setsubmitted] = useState(false);\n  const answersSelector = useSelector((state: any) => state.answers.answers);\n\n  useEffect(() => {\n    const fetchedQuestions = async () => {\n      setIsLoading(true);\n      const response = await fetch(process.env.REACT_APP_FireBaseQuestions!);\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n      const responseData = await response.json();\n      const loadedQuestions: QuestionItem[] = [];\n      const loadedAnswers: number[] = [];\n\n      for (const key in responseData) {\n        dispatch(\n          answersSlice.actions.addEmptyAnswer({ questionId: key, value: 0 })\n        );\n\n        loadedQuestions.push({\n          id: key,\n          text: responseData[key],\n        });\n        loadedAnswers.push(0);\n      }\n\n      setQuestions(loadedQuestions);\n      setIsLoading(false);\n    };\n\n    fetchedQuestions().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, [dispatch]);\n  if (httpError) {\n    return (\n      <section className={classes.QuestionsError}>\n        <p>{httpError}</p>\n      </section>\n    );\n  }\n  if (isLoading) {\n    return (\n      <section className={classes.QuestionsLoading}>\n        <p>loading...</p>\n      </section>\n    );\n  }\n  const allChecked = answersSelector.reduce(\n    (partialSum: number, a: { value: number }) => partialSum * a.value,\n    1\n  );\n  const changeHandler = () => {\n    setsubmitted(true);\n\n    if (allChecked === 0) {\n      dispatch(\n        uiActions.showNotification({\n          show: true,\n          title: \"Error\",\n          message: \"Please complete all the questions..\",\n        })\n      );\n    } else {\n      dispatch(uiActions.toggle());\n    }\n  };\n  const questionList = questions.map((question) => (\n    <QuestionItems\n      key={question.id}\n      id={question.id}\n      text={question.text}\n      submitted={submitted}\n    />\n  ));\n  return (\n    <Card class=\"survey\">\n      <ul className=\"answer\">{questionList}</ul>\n      <SubmitButton onClick={changeHandler} />\n    </Card>\n  );\n};\nexport default AvailableQuestions;\n","import classes from \"./Notification.module.css\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\nconst Notification = (props) => {\n  const dispatch = useDispatch();\n\n  const cssClasses = `${classes[\"modal-content\"]} `;\n  const closeModal = () => {\n    dispatch(\n      uiActions.showNotification({\n        show: false,\n        title: \"\",\n        message: \"\",\n      })\n    );\n  };\n  return (\n    <div id=\"myModalError\" className={classes.modal} onClick={closeModal}>\n      <section className={cssClasses}>\n        <span className={classes.close} onClick={closeModal}>\n          &times;\n        </span>\n        <h2>{props.title}</h2>\n        <p>{props.message}</p>\n      </section>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React from \"react\";\nimport { Fragment } from \"react\";\nimport classes from \"./header.module.css\";\n\nconst Header = () => {\n  return (\n    <Fragment>\n      <header className={classes.header}>\n        <h1>Hogrefe Frontend task</h1>\n      </header>\n    </Fragment>\n  );\n};\nexport default Header;\n","import classes from \"./AnswerItem.module.css\";\nconst AnswerItem = (props) => {\n  const { id, value } = props;\n\n  return (\n    <li key={id} className={classes.answer}>\n      <p>\n        {id} - {value}\n      </p>\n    </li>\n  );\n};\n\nexport default AnswerItem;\n","import { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\n\nimport classes from \"./Submit.module.css\";\nimport AnswerItem from \"./AnswerItem\";\nimport { uiActions } from \"../../store/ui-slice\";\nimport Card from \"../UI/Card\";\nconst Submit = () => {\n  const answers = useSelector((state) => state.answers.answers);\n  const dispatch = useDispatch();\n\n  const closeModal = () => {\n    dispatch(uiActions.toggle());\n  };\n  return (\n    <div id=\"myModalError\" className={classes.modal} onClick={closeModal}>\n      <Card class=\"modal-content\">\n        <h2>Your Answers:</h2>\n        <ul>\n          {answers.map((answer) => {\n            return (\n              <AnswerItem\n                key={answer.questionId}\n                id={answer.questionId}\n                value={answer.value}\n              />\n            );\n          })}\n        </ul>\n      </Card>\n    </div>\n  );\n};\n\nexport default Submit;\n","import { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport AvailableQuestions from \"./components/Questions/AvailableQuestions\";\nimport Notification from \"./components/UI/Notification\";\nimport Header from \"./components/Layout/Header\";\nimport Submit from \"./components/Submit/Submit\";\n\nfunction App() {\n  const notification = useSelector((state) => state.ui.notification);\n  const submit = useSelector((state) => state.ui.answersIsVisible);\n  return (\n    <Fragment>\n      {notification.show && (\n        <Notification\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      {submit && <Submit />}\n      <Header />\n      <AvailableQuestions />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\n\nimport store from './store/index';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}